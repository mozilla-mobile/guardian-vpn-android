apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def commitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "org.mozilla.firefox.vpn"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def circleci_build_number = System.getenv("CIRCLE_BUILD_NUM")
        if (circleci_build_number?.trim()) {
            versionCode circleci_build_number.toInteger()
            versionName "$versionName($circleci_build_number)"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    flavorDimensions "product"

    productFlavors {
        guardian {

        }

        preview {
            applicationIdSuffix ".beta"
            versionNameSuffix "-${commitHash()}"
        }
    }

    androidExtensions {
        experimental = true
    }
}

configurations {
    ktlint
}

dependencies {
    implementation project(':libwg')
    implementation project(':crypto')
    implementation project(':config')
    implementation(name:'country-flags', ext:'aar')

    implementation "net.sourceforge.streamsupport:android-retrofuture:$streamsupportVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-rc03'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-rc03'
    implementation 'androidx.navigation:navigation-fragment:2.2.0-rc03'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.0-rc03'
    implementation 'androidx.navigation:navigation-ui:2.2.0-rc03'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.0-rc03'
    implementation 'androidx.navigation:navigation-runtime-ktx:2.2.0-rc03'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.browser:browser:1.2.0-rc01'
    implementation 'com.google.android.play:core:1.6.4'

    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation 'io.coil-kt:coil:0.7.0'
    implementation 'com.github.hadilq.liveevent:liveevent:1.0.1'
    implementation 'com.airbnb.android:lottie:3.2.2'
    ktlint 'com.pinterest:ktlint:0.35.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}